(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    126299,       2600]
NotebookOptionsPosition[    123568,       2549]
NotebookOutlinePosition[    124157,       2569]
CellTagsIndexPosition[    124114,       2566]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "Lacia`Base`Constant`"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}], ";"}]}], "Code",
 CellLabel->"In[42]:=",ExpressionUUID->"87a75edb-6a7f-4804-b901-529341a04998"],

Cell["", "Text",ExpressionUUID->"c44bc543-7158-46fa-93b4-148d766e50c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dir", "[", "0", "]"}], "=", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"file", "[", "0", "]"}], "=", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c.txt\>\""}], "}"}]}]}],
   ";"}]}], "Code",
 CellLabel->"In[44]:=",ExpressionUUID->"4be35900-3989-48d9-9bfb-effe6edc1f15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pathList", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dir", "[", "0", "]"}], ",", 
     RowBox[{"file", "[", "0", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"funList", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ToString", "@*", "FileNameSplit"}], ",", "FileBaseName", ",", 
      "FileExtension", ",", "FileNameTake", ",", "FileNameDrop", ",", 
      "DirectoryName"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"Construct", ",", "funList", ",", "pathList"}], "]"}], "//", 
    RowBox[{"associationFromTable", "[", 
     RowBox[{
      RowBox[{"ToString", "/@", "funList"}], ",", "pathList"}], "]"}]}], "//",
    "Dataset"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<filename.csv\>\""}],
       "}"}]}], ",", 
    RowBox[{"Out", "[", "]"}]}], "]"}], ";"}]}], "Code",
 CellLabel->"In[46]:=",ExpressionUUID->"666c9dd4-3fd6-4f1d-bcd1-4cc4417676ed"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "ToString @* FileNameSplit" -> <|
        "a/b/c" -> "{a, b, c}", "a/b/c.txt" -> "{a, b, c.txt}"|>, 
       "FileBaseName" -> <|"a/b/c" -> "c", "a/b/c.txt" -> "c"|>, 
       "FileExtension" -> <|"a/b/c" -> "", "a/b/c.txt" -> "txt"|>, 
       "FileNameTake" -> <|"a/b/c" -> "c", "a/b/c.txt" -> "c.txt"|>, 
       "FileNameDrop" -> <|"a/b/c" -> "a/b", "a/b/c.txt" -> "a/b"|>, 
       "DirectoryName" -> <|"a/b/c" -> "a/b/", "a/b/c.txt" -> "a/b/"|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "a/b/c"} -> 
        1, {All, "a/b/c.txt"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[280.], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "a/b/c" -> TypeSystem`PackageScope`AtomShape[100.80000000000001`],
              "a/b/c.txt" -> 
             TypeSystem`PackageScope`AtomShape[145.60000000000002`]|>], 
           DirectedInfinity[1], 2, {All}]]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"a/b/c", "a/b/c.txt"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "a/b/c"} -> 
        1, {All, "a/b/c.txt"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[280.], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "a/b/c" -> TypeSystem`PackageScope`AtomShape[100.80000000000001`],
              "a/b/c.txt" -> 
             TypeSystem`PackageScope`AtomShape[145.60000000000002`]|>], 
           DirectedInfinity[1], 2, {All}]]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"a/b/c", "a/b/c.txt"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 6], "Path" -> {}, "DisplayedRowCount" -> 
     6, "DisplayedColumnCount" -> 2, "DataRowCount" -> 6, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a/b/c", 
                  Style[
                  "a/b/c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a/b/c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a/b/c"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a/b/c.txt", 
                  Style[
                  "a/b/c.txt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a/b/c.txt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a/b/c.txt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ToString @* FileNameSplit", 
                  Style[
                  "ToString @* FileNameSplit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ToString @* FileNameSplit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ToString @* FileNameSplit"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["{a, b, c}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ToString @* FileNameSplit"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["{a, b, c.txt}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ToString @* FileNameSplit"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileBaseName", 
                  Style[
                  "FileBaseName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileBaseName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileBaseName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileBaseName"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileBaseName"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileExtension", 
                  Style[
                  "FileExtension", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileExtension"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExtension"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExtension"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExtension"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileNameTake", 
                  Style[
                  "FileNameTake", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileNameTake"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileNameTake"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileNameTake"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["c.txt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileNameTake"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileNameDrop", 
                  Style[
                  "FileNameDrop", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileNameDrop"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileNameDrop"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["a/b", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileNameDrop"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["a/b", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileNameDrop"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DirectoryName", 
                  Style[
                  "DirectoryName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DirectoryName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["a/b/", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryName"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["a/b/", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryName"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       557.6500000000001, {113.40808868408203`, 120.57300567626953`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      557.6500000000001, {113.40808868408203`, 120.57300567626953`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"60c5dda4-7b70-4a3a-8f25-401052082856"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"10ab094e-b8f2-42f6-9c8b-b619e017e677"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"base", "=", 
   RowBox[{"File", "@", 
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{
      "$HomeDirectory", ",", "\"\<Downloads\>\"", ",", "\"\<test\>\""}], 
      "}"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteDirectory", "[", 
    RowBox[{"base", ",", 
     RowBox[{"DeleteContents", "->", "True"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CreateDirectory", "[", "base", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"Do", "[", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dir", "[", "n", "]"}], "=", 
     RowBox[{"FileNameJoin", "@", 
      RowBox[{"{", 
       RowBox[{
       "$HomeDirectory", ",", "\"\<Downloads\>\"", ",", "\"\<test\>\"", ",", 
        RowBox[{"\"\<sub\>\"", "<>", 
         RowBox[{"ToString", "[", "n", "]"}]}]}], "}"}]}]}], ";", "\n", "\t", 
    
    RowBox[{
     RowBox[{"file", "[", "n", "]"}], "=", 
     RowBox[{"FileNameJoin", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dir", "[", "n", "]"}], ",", 
        RowBox[{"\"\<file\>\"", "<>", 
         RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<.txt\>\""}]}], 
       "}"}]}]}], ";", "\n", "\t", 
    RowBox[{"CreateFile", "[", 
     RowBox[{
      RowBox[{"file", "[", "n", "]"}], ",", 
      RowBox[{"OverwriteTarget", "->", "True"}], ",", 
      RowBox[{"CreateIntermediateDirectories", "->", "True"}]}], "]"}]}], ",",
    "\n", "\t", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"Range", "[", "5", "]"}]}], "}"}]}], "\n", "]"}]}], "Code",
 CellLabel->"In[54]:=",ExpressionUUID->"026be6cc-941f-4f92-945a-f70a06487af5"],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{"\"/Users/Reiko/Downloads/test\""},
   "FileArgument"], "]"}]], "Output",
 CellLabel->"Out[54]=",ExpressionUUID->"d1ee836b-c7c1-4131-aa81-a8d1fbf3e8ec"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"76d82f44-c405-476c-b24b-8c436c72bc06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNames", "[", 
   RowBox[{
    RowBox[{"{", "All", "}"}], ",", 
    RowBox[{"dir", "/@", 
     RowBox[{"Range", "[", "5", "]"}]}]}], "]"}], "//", "Column"}]], "Code",
 CellLabel->"In[58]:=",ExpressionUUID->"39e5a75f-692e-4a93-877d-21b105219771"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"/Users/Reiko/Downloads/test/sub1/file1.txt\"\>"},
    {"\<\"/Users/Reiko/Downloads/test/sub2/file2.txt\"\>"},
    {"\<\"/Users/Reiko/Downloads/test/sub3/file3.txt\"\>"},
    {"\<\"/Users/Reiko/Downloads/test/sub4/file4.txt\"\>"},
    {"\<\"/Users/Reiko/Downloads/test/sub5/file5.txt\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"62c1eb2d-88f7-4d06-806c-8a4bc17d41e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{"file___", "/;", 
       RowBox[{
        RowBox[{"FileType", "[", "file", "]"}], "==", "Directory"}]}], ",", 
      "base", ",", "Infinity"}], "]"}], "//", "Column"}], "\n", 
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{"file___", "/;", 
       RowBox[{"DirectoryQ", "[", "file", "]"}]}], ",", "base", ",", 
      "Infinity"}], "]"}], "//", "Column"}]}], "*)"}]], "Code",
 CellLabel->
  "In[286]:=",ExpressionUUID->"9363bcd6-ce0d-4625-8061-2337b670b747"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{"file___", "/;", 
       RowBox[{
        RowBox[{"FileType", "[", "file", "]"}], "===", "File"}]}], ",", 
      "base", ",", "Infinity"}], "]"}], "//", "Column"}], "\n", 
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{"file___", "/;", 
       RowBox[{"!", 
        RowBox[{"DirectoryQ", "[", "file", "]"}]}]}], ",", "base", ",", 
      "Infinity"}], "]"}], "//", "Column"}]}], "*)"}]], "Code",
 CellLabel->
  "In[291]:=",ExpressionUUID->"dba28f76-a760-4c52-9963-e2147124be09"],

Cell["", "Text",ExpressionUUID->"c34693af-0090-4c7d-ba9c-ab60f3417123"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pathList", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dir", "[", "0", "]"}], ",", 
     RowBox[{"file", "[", "0", "]"}], ",", 
     RowBox[{"dir", "[", "1", "]"}], ",", 
     RowBox[{"file", "[", "1", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"funList", "=", 
    RowBox[{"{", 
     RowBox[{
     "FileExistsQ", ",", "FileType", ",", "FileFormat", ",", "DirectoryQ", 
      ",", "ParentDirectory"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{"Quiet", "@*", "Construct"}], ",", "funList", ",", 
        "pathList"}], "]"}], "//", 
      RowBox[{"associationFromTable", "[", 
       RowBox[{
        RowBox[{"ToString", "/@", "funList"}], ",", "pathList"}], "]"}]}], "//",
      "\n", "\t", "hideSelfName"}], "//", "Dataset"}], "//", "Quiet"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<file.csv\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Out", "[", "]"}]}], "]"}], ";"}]}], "Code",
 CellLabel->"In[63]:=",ExpressionUUID->"50941ddd-1dc0-4ed7-b21a-66a45530eeeb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "FileExistsQ" -> <|
        "a/b/c" -> False, "a/b/c.txt" -> False, "/Downloads/test/sub1" -> 
         True, "/Downloads/test/sub1/file1.txt" -> True|>, 
       "FileType" -> <|
        "a/b/c" -> None, "a/b/c.txt" -> None, "/Downloads/test/sub1" -> 
         Directory, "/Downloads/test/sub1/file1.txt" -> File|>, 
       "FileFormat" -> <|
        "a/b/c" -> $Failed, "a/b/c.txt" -> $Failed, "/Downloads/test/sub1" -> 
         "Directory", "/Downloads/test/sub1/file1.txt" -> "Text"|>, 
       "DirectoryQ" -> <|
        "a/b/c" -> False, "a/b/c.txt" -> False, "/Downloads/test/sub1" -> 
         True, "/Downloads/test/sub1/file1.txt" -> False|>, 
       "ParentDirectory" -> <|
        "a/b/c" -> ParentDirectory["a/b/c"], "a/b/c.txt" -> 
         ParentDirectory["a/b/c.txt"], "/Downloads/test/sub1" -> 
         "/Downloads/test", "/Downloads/test/sub1/file1.txt" -> 
         ParentDirectory["/Downloads/test/sub1/file1.txt"]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "a/b/c"} -> 
        1, {All, "a/b/c.txt"} -> 1, {All, "/Downloads/test/sub1"} -> 
        1, {All, "/Downloads/test/sub1/file1.txt"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[168.00000000000003`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "a/b/c" -> TypeSystem`PackageScope`UnknownShape[False], 
             "a/b/c.txt" -> TypeSystem`PackageScope`UnknownShape[False], 
             "/Downloads/test/sub1" -> 
             TypeSystem`PackageScope`UnknownShape[False], 
             "/Downloads/test/sub1/file1.txt" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "a/b/c", "a/b/c.txt", "/Downloads/test/sub1", 
         "/Downloads/test/sub1/file1.txt"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "a/b/c"} -> 
        1, {All, "a/b/c.txt"} -> 1, {All, "/Downloads/test/sub1"} -> 
        1, {All, "/Downloads/test/sub1/file1.txt"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[168.00000000000003`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "a/b/c" -> TypeSystem`PackageScope`UnknownShape[False], 
             "a/b/c.txt" -> TypeSystem`PackageScope`UnknownShape[False], 
             "/Downloads/test/sub1" -> 
             TypeSystem`PackageScope`UnknownShape[False], 
             "/Downloads/test/sub1/file1.txt" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "a/b/c", "a/b/c.txt", "/Downloads/test/sub1", 
         "/Downloads/test/sub1/file1.txt"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`AnyType}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 5, "DataColumnCount" -> 4,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a/b/c", 
                  Style[
                  "a/b/c", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a/b/c"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a/b/c"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a/b/c.txt", 
                  Style[
                  "a/b/c.txt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a/b/c.txt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a/b/c.txt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["/Downloads/test/sub1", 
                  Style[
                  "/Downloads/test/sub1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "/Downloads/test/sub1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "/Downloads/test/sub1"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["/Downloads/test/sub1/file1.txt", 
                  Style[
                  "/Downloads/test/sub1/file1.txt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "/Downloads/test/sub1/file1.txt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "/Downloads/test/sub1/file1.txt"}, "ColumnHeader", True],
                "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileExistsQ", 
                  Style[
                  "FileExistsQ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileExistsQ"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExistsQ"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExistsQ"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExistsQ"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExistsQ"], 
                 Key["/Downloads/test/sub1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileExistsQ"], 
                 Key["/Downloads/test/sub1/file1.txt"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileType", 
                  Style[
                  "FileType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["None", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileType"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["None", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileType"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Directory", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileType"], 
                 Key["/Downloads/test/sub1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["File", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileType"], 
                 Key["/Downloads/test/sub1/file1.txt"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileFormat", 
                  Style[
                  "FileFormat", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FileFormat"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileFormat"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["$Failed", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileFormat"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["$Failed", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileFormat"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Directory", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileFormat"], 
                 Key["/Downloads/test/sub1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Text", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FileFormat"], 
                 Key["/Downloads/test/sub1/file1.txt"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DirectoryQ", 
                  Style[
                  "DirectoryQ", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DirectoryQ"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryQ"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryQ"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryQ"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryQ"], 
                 Key["/Downloads/test/sub1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DirectoryQ"], 
                 Key["/Downloads/test/sub1/file1.txt"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ParentDirectory", 
                  Style[
                  "ParentDirectory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ParentDirectory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ParentDirectory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"ParentDirectory", "[", "\"a/b/c\"", "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ParentDirectory"], 
                 Key["a/b/c"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"ParentDirectory", "[", "\"a/b/c.txt\"", "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ParentDirectory"], 
                 Key["a/b/c.txt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["/Downloads/test", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ParentDirectory"], 
                 Key["/Downloads/test/sub1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 RowBox[{
                  "ParentDirectory", "[", 
                   "\"/Downloads/test/sub1/file1.txt\"", "]"}], FontFamily -> 
                 Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ParentDirectory"], 
                 Key["/Downloads/test/sub1/file1.txt"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       1188.2109416127205`, {96.78443908691406, 103.94935607910156`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      1188.2109416127205`, {96.78443908691406, 103.94935607910156`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"6b5e1a51-0554-4f49-8875-55ae27d5ad71"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"2b185014-052d-4785-966d-427f7b59ab13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileSystemMap", "[", 
  RowBox[{"FileDate", ",", "base", ",", "Infinity"}], "]"}]], "Code",
 CellLabel->"In[67]:=",ExpressionUUID->"0f9ad94d-e4fe-42a1-9f57-ae869ae5ab1c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"sub1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"file1.txt\"\>", "\[Rule]", 
      TemplateBox[{
        RowBox[{"\"Sun 11 Aug 2024 13:41:17\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
             StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
           "TimeZoneLabel"]}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2024", ",", "8", ",", "11", ",", "13", ",", "41", ",", 
                "17.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
            ",", "8.`"}], "]"}]},
       "DateObject",
       Editable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"sub2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"file2.txt\"\>", "\[Rule]", 
      TemplateBox[{
        RowBox[{"\"Sun 11 Aug 2024 13:41:17\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
             StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
           "TimeZoneLabel"]}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2024", ",", "8", ",", "11", ",", "13", ",", "41", ",", 
                "17.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
            ",", "8.`"}], "]"}]},
       "DateObject",
       Editable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"sub3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"file3.txt\"\>", "\[Rule]", 
      TemplateBox[{
        RowBox[{"\"Sun 11 Aug 2024 13:41:17\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
             StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
           "TimeZoneLabel"]}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2024", ",", "8", ",", "11", ",", "13", ",", "41", ",", 
                "17.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
            ",", "8.`"}], "]"}]},
       "DateObject",
       Editable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"sub4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"file4.txt\"\>", "\[Rule]", 
      TemplateBox[{
        RowBox[{"\"Sun 11 Aug 2024 13:41:17\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
             StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
           "TimeZoneLabel"]}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2024", ",", "8", ",", "11", ",", "13", ",", "41", ",", 
                "17.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
            ",", "8.`"}], "]"}]},
       "DateObject",
       Editable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"sub5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"file5.txt\"\>", "\[Rule]", 
      TemplateBox[{
        RowBox[{"\"Sun 11 Aug 2024 13:41:17\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
             StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
           "TimeZoneLabel"]}], 
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"2024", ",", "8", ",", "11", ",", "13", ",", "41", ",", 
                "17.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
            ",", "8.`"}], "]"}]},
       "DateObject",
       Editable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\".DS_Store\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Sun 11 Aug 2024 13:41:23\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
           StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
         "TimeZoneLabel"]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2024", ",", "8", ",", "11", ",", "13", ",", "41", ",", 
              "23.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          "8.`"}], "]"}]},
     "DateObject",
     Editable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"1bb66adf-8832-4c84-91a4-c72c1e497b84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileSystemTree", "[", 
  RowBox[{
   RowBox[{"First", "@", "base"}], ",", 
   RowBox[{"TreeLayout", "->", "Left"}]}], "]"}]], "Code",
 CellLabel->"In[68]:=",ExpressionUUID->"39514b3a-84e1-42e8-bf18-8ff9a798f48a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[
     "/Users/Reiko/Downloads/test", <|
      "sub1" -> Tree[
        "/Users/Reiko/Downloads/test/sub1", <|
         "file1.txt" -> 
          Tree["/Users/Reiko/Downloads/test/sub1/file1.txt", None, {
            TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
             "FileSystem"}]|>, {
         TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
          "FileSystem"}], "sub2" -> 
       Tree["/Users/Reiko/Downloads/test/sub2", <|
         "file2.txt" -> 
          Tree["/Users/Reiko/Downloads/test/sub2/file2.txt", None, {
            TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
             "FileSystem"}]|>, {
         TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
          "FileSystem"}], "sub3" -> 
       Tree["/Users/Reiko/Downloads/test/sub3", <|
         "file3.txt" -> 
          Tree["/Users/Reiko/Downloads/test/sub3/file3.txt", None, {
            TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
             "FileSystem"}]|>, {
         TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
          "FileSystem"}], "sub4" -> 
       Tree["/Users/Reiko/Downloads/test/sub4", <|
         "file4.txt" -> 
          Tree["/Users/Reiko/Downloads/test/sub4/file4.txt", None, {
            TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
             "FileSystem"}]|>, {
         TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
          "FileSystem"}], "sub5" -> 
       Tree["/Users/Reiko/Downloads/test/sub5", <|
         "file5.txt" -> 
          Tree["/Users/Reiko/Downloads/test/sub5/file5.txt", None, {
            TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
             "FileSystem"}]|>, {
         TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
          "FileSystem"}], ".DS_Store" -> 
       Tree["/Users/Reiko/Downloads/test/.DS_Store", None, {
         TreeElementLabelFunction -> "FileSystem", ParentEdgeLabelFunction -> 
          "FileSystem"}]|>, {
      TreeLayout -> Left, TreeElementLabelFunction -> "FileSystem", 
       ParentEdgeLabelFunction -> "FileSystem"}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., -1.4723676796581053`}, {
         0.6212607441973945, -2.1049538557690797`*^-16}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., -1.4723676796581053`}, {
         0.621260744197395, -0.588947071863242}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., -1.4723676796581053`}, {
         0.6212607441973954, -1.1778941437264838`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., -1.4723676796581053`}, {
         0.6212607441973959, -1.7668412155897257`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., -1.4723676796581053`}, {
         0.6212607441973963, -2.355788287452967}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., -1.4723676796581053`}, {
         0.6212607441973967, -2.9447353593162093`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.6212607441973945, -2.1049538557690797`*^-16}, {
         1.2425214883947902`, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.621260744197395, -0.588947071863242}, {
         1.2425214883947906`, -0.5889470718632418}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.6212607441973954, -1.1778941437264838`}, {
         1.242521488394791, -1.1778941437264836`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.6212607441973959, -1.7668412155897257`}, {
         1.242521488394791, -1.7668412155897255`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.6212607441973963, -2.355788287452967}, {
         1.2425214883947924`, -2.355788287452967}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"test\"\>",
            "\"/Users/Reiko/Downloads/test\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "/Users/Reiko/Downloads/test", "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0., -1.4723676796581053}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"sub1\"\>",
            "\"/Users/Reiko/Downloads/test/sub1\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "/Users/Reiko/Downloads/test/sub1", "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.6212607441973945, -2.1049538557690797*^-16}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"file1.txt\"\>",
            "\"/Users/Reiko/Downloads/test/sub1/file1.txt\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "/Users/Reiko/Downloads/test/sub1/file1.txt", 
            "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2425214883947902, 0.}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"sub2\"\>",
            "\"/Users/Reiko/Downloads/test/sub2\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "/Users/Reiko/Downloads/test/sub2", "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.621260744197395, -0.588947071863242}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"file2.txt\"\>",
            "\"/Users/Reiko/Downloads/test/sub2/file2.txt\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "/Users/Reiko/Downloads/test/sub2/file2.txt", 
            "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2425214883947906, -0.5889470718632418}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"sub3\"\>",
            "\"/Users/Reiko/Downloads/test/sub3\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "/Users/Reiko/Downloads/test/sub3", "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.6212607441973954, -1.1778941437264838}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"file3.txt\"\>",
            "\"/Users/Reiko/Downloads/test/sub3/file3.txt\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "/Users/Reiko/Downloads/test/sub3/file3.txt", 
            "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.242521488394791, -1.1778941437264836}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"sub4\"\>",
            "\"/Users/Reiko/Downloads/test/sub4\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "/Users/Reiko/Downloads/test/sub4", "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.6212607441973959, -1.7668412155897257}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"file4.txt\"\>",
            "\"/Users/Reiko/Downloads/test/sub4/file4.txt\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "/Users/Reiko/Downloads/test/sub4/file4.txt", 
            "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.242521488394791, -1.7668412155897255}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"sub5\"\>",
            "\"/Users/Reiko/Downloads/test/sub5\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "/Users/Reiko/Downloads/test/sub5", "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.6212607441973963, -2.355788287452967}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\"file5.txt\"\>",
            "\"/Users/Reiko/Downloads/test/sub5/file5.txt\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "/Users/Reiko/Downloads/test/sub5/file5.txt", 
            "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {1.2425214883947924, -2.355788287452967}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox[
          TagBox[
           TooltipBox["\<\".DS_Store\"\>",
            "\"/Users/Reiko/Downloads/test/.DS_Store\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "/Users/Reiko/Downloads/test/.DS_Store", 
            "Tooltip"]& ],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->0,
          StripOnInput->False], {0.6212607441973967, -2.9447353593162093}],
        "DynamicName",
        BoxID -> "VertexID$12"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellLabel->"Out[68]=",ExpressionUUID->"2e46fad5-ac37-4385-aef9-f50d1c9c7e55"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"c5ec48a3-f0ca-4334-b648-b5530a8f8e74"]
},
Editable->True,
WindowSize->{1680, 1022},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowStatusArea->"",
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "Reiko", 
   "Library", "Mathematica", "SystemFiles", "FrontEnd", "StyleSheets"}, 
  "Yurie.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"24b72555-1a5c-4b74-ae9a-64b6bce1b53d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 235, 5, 113, "Code",ExpressionUUID->"87a75edb-6a7f-4804-b901-529341a04998"],
Cell[796, 27, 71, 0, 60, "Text",ExpressionUUID->"c44bc543-7158-46fa-93b4-148d766e50c9"],
Cell[870, 29, 511, 15, 89, "Code",ExpressionUUID->"4be35900-3989-48d9-9bfb-effe6edc1f15"],
Cell[CellGroupData[{
Cell[1406, 48, 1129, 33, 184, "Code",ExpressionUUID->"666c9dd4-3fd6-4f1d-bcd1-4cc4417676ed"],
Cell[2538, 83, 42360, 778, 255, "Output",ExpressionUUID->"60c5dda4-7b70-4a3a-8f25-401052082856"]
}, Open  ]],
Cell[44913, 864, 71, 0, 60, "Text",ExpressionUUID->"10ab094e-b8f2-42f6-9c8b-b619e017e677"],
Cell[CellGroupData[{
Cell[45009, 868, 1642, 47, 325, "Code",ExpressionUUID->"026be6cc-941f-4f92-945a-f70a06487af5"],
Cell[46654, 917, 204, 4, 48, "Output",ExpressionUUID->"d1ee836b-c7c1-4131-aa81-a8d1fbf3e8ec"]
}, Open  ]],
Cell[46873, 924, 71, 0, 60, "Text",ExpressionUUID->"76d82f44-c405-476c-b24b-8c436c72bc06"],
Cell[CellGroupData[{
Cell[46969, 928, 283, 7, 66, "Code",ExpressionUUID->"39e5a75f-692e-4a93-877d-21b105219771"],
Cell[47255, 937, 592, 12, 123, "Output",ExpressionUUID->"62c1eb2d-88f7-4d06-806c-8a4bc17d41e0"]
}, Open  ]],
Cell[47862, 952, 593, 17, 89, "Code",ExpressionUUID->"9363bcd6-ce0d-4625-8061-2337b670b747"],
Cell[48458, 971, 613, 18, 89, "Code",ExpressionUUID->"dba28f76-a760-4c52-9963-e2147124be09"],
Cell[49074, 991, 71, 0, 60, "Text",ExpressionUUID->"c34693af-0090-4c7d-ba9c-ab60f3417123"],
Cell[CellGroupData[{
Cell[49170, 995, 1284, 39, 207, "Code",ExpressionUUID->"50941ddd-1dc0-4ed7-b21a-66a45530eeeb"],
Cell[50457, 1036, 51775, 973, 221, "Output",ExpressionUUID->"6b5e1a51-0554-4f49-8875-55ae27d5ad71"]
}, Open  ]],
Cell[102247, 2012, 71, 0, 60, "Text",ExpressionUUID->"2b185014-052d-4785-966d-427f7b59ab13"],
Cell[CellGroupData[{
Cell[102343, 2016, 194, 3, 66, "Code",ExpressionUUID->"0f9ad94d-e4fe-42a1-9f57-ae869ae5ab1c"],
Cell[102540, 2021, 4600, 109, 70, "Output",ExpressionUUID->"1bb66adf-8832-4c84-91a4-c72c1e497b84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107177, 2135, 236, 5, 66, "Code",ExpressionUUID->"39514b3a-84e1-42e8-bf18-8ff9a798f48a"],
Cell[107416, 2142, 16062, 402, 561, "Output",ExpressionUUID->"2e46fad5-ac37-4385-aef9-f50d1c9c7e55"]
}, Open  ]],
Cell[123493, 2547, 71, 0, 60, "Text",ExpressionUUID->"c5ec48a3-f0ca-4334-b648-b5530a8f8e74"]
}
]
*)

